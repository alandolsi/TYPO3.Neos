#######################
# PREDEFINED TYPOSCRIPT
#######################

# setting up implementation class names
prototype(TYPO3.TypoScript:Array).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\ArrayImplementation'
prototype(TYPO3.TypoScript:Template).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\TemplateImplementation'
prototype(TYPO3.TypoScript:Collection).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\CollectionImplementation'
prototype(TYPO3.TypoScript:Case).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\CaseImplementation'
prototype(TYPO3.TypoScript:Matcher).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\MatcherImplementation'

prototype(TYPO3.TypoScript:Template) {
	node = ${node}
}

# setting up additional Prototype configuration
prototype(TYPO3.TypoScript:Collection) {
	collection = ${context.children()}
	itemRenderer = TYPO3.TypoScript:Case
	itemName = 'node'
}

# HTML TS Object
prototype(TYPO3.TypoScript:Html) < prototype(TYPO3.TypoScript:Template)
prototype(TYPO3.TypoScript:Html) {
	templatePath = 'resource://TYPO3.TYPO3/Private/Templates/TypoScriptObjects/HtmlTemplate.html'
	source = ${context.property('source')}
}
prototype(TYPO3.TypoScript:Case).matchers.100100 {
	condition = ${context.is('[instanceof TYPO3.Phoenix.ContentTypes:Html]')}
	type = 'TYPO3.TypoScript:Html'
}

# Page TS Object
prototype(TYPO3.TypoScript:Page) < prototype(TYPO3.TypoScript:Template)
prototype(TYPO3.TypoScript:Page) {
	templatePath = 'resource://TYPO3.Phoenix.ContentTypes/Private/Templates/TypoScriptObjects/PageTemplate.html'
	body = TYPO3.TypoScript:Template
	body.title = ${context.property('title')}
	body.nodePath = ${context.property('_path')}
	headerData = TYPO3.TypoScript:Array
	backendHeader = TYPO3.TypoScript:Array
}

# TextWithHeadline TS Object
prototype(TYPO3.TypoScript:TextWithHeadline) < prototype(TYPO3.TypoScript:Template)
prototype(TYPO3.TypoScript:TextWithHeadline) {
	templatePath = 'resource://TYPO3.Phoenix.ContentTypes/Private/Templates/TypoScriptObjects/TextWithHeadline.html'
	title = ${context.property('title')}
	text = ${context.property('text')}
}
prototype(TYPO3.TypoScript:Case).matchers.100200 {
	condition = ${context.is('[instanceof TYPO3.Phoenix.ContentTypes:TextWithHeadline]')}
	type = 'TYPO3.TypoScript:TextWithHeadline'
}