include: Prototypes/ContentCase.ts2
include: Prototypes/Template.ts2
include: Prototypes/PrimaryContent.ts2
include: Prototypes/ContentCollection.ts2
include: Prototypes/Page.ts2
include: Prototypes/Shortcut.ts2
include: Prototypes/Breadcrumb.ts2
include: Prototypes/Menu.ts2
include: Prototypes/Plugin.ts2


# ConvertNodeUri implementation
#
# replaces all occurrences of "node://<UUID>" by proper URIs.
#
prototype(TYPO3.Neos:ConvertNodeUris) {
	@class = 'TYPO3\\Neos\\TypoScript\\ConvertNodeUrisImplementation'
	value = ${value}
	node = ${node}
}

# The root matcher used to start rendering in Neos
#
# The default is to use a render path of "page", unless the requested format is not "html"
# in which case the format string will be used as the render path (with dots replaced by slashes)
#
root = TYPO3.TypoScript:Case
root {
	layout {
		@position = 'end 9997'
		layout = ${q(node).property('layout') != null && q(node).property('layout') != '' ? q(node).property('layout') : q(node).parents('[subpageLayout]').first().property('subpageLayout')}
		condition = ${this.layout != null && this.layout != ''}
		renderPath = ${'/' + this.layout}
	}

	format {
		@position = 'end 9998'
		condition = ${request.format != 'html'}
		renderPath = ${'/' + String.replace(request.format, '.', '/')}
	}

	default {
		@position = 'end 9999'
		condition = TRUE
		renderPath = '/page'
	}
}
